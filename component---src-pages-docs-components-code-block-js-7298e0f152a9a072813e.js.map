{"version":3,"sources":["webpack:///./src/pages/_docs/components/code-block.js","webpack:///./node_modules/classnames/index.js"],"names":["CodeBlock","React","forwardRef","ref","className","as","props","classes","classNames","Component","displayName","defaultProps","variant","active","disabled","type","hasOwn","hasOwnProperty","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports"],"mappings":"kMA+CA,IAOMA,EAAYC,IAAMC,YAAW,WAA8BC,GAAS,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,GAAOC,E,oIAAiB,uBACjEC,EAAUC,IAAWJ,EAAD,OAEpBK,EAAYJ,GAAM,MACxB,OAAO,kBAACI,EAAD,iBAAeH,EAAf,CAAsBF,UAAWG,QAG1CP,EAAUU,YAAc,YAExBV,EAAUW,aAhBW,CACnBC,QAAS,UACTC,QAAQ,EACRC,UAAU,EACVC,KAAM,UAcOf,a,qBCjEf,QAAQ,QASR,WACE,aAEA,IAAIgB,EAAS,GAAGC,eAEhB,SAAST,IAGP,IAFA,IAAID,EAAU,GAELW,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1Bf,EAAQgB,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC3C,IAAIM,EAAQlB,EAAWmB,MAAM,KAAMN,GAE/BK,GACFnB,EAAQgB,KAAKG,QAEV,GAAgB,WAAZJ,EACT,IAAK,IAAIM,KAAOP,EACVL,EAAOa,KAAKR,EAAKO,IAAQP,EAAIO,IAC/BrB,EAAQgB,KAAKK,IAMrB,OAAOrB,EAAQuB,KAAK,KAGeC,EAAOC,SAC1CxB,EAAoB,QAAIA,EACxBuB,EAAOC,QAAUxB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aAxCL","file":"component---src-pages-docs-components-code-block-js-7298e0f152a9a072813e.js","sourcesContent":["import classNames from \"classnames\"\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst propTypes = {\n  /**\n   * One or more button variant combinations\n   *\n   * buttons may be one of a variety of visual variants such as:\n   *\n   * `'primary', 'secondary', 'success', 'danger', 'warning', 'info', 'dark', 'light', 'link'`\n   *\n   * as well as \"outline\" versions (prefixed by 'outline-*')\n   *\n   * `'outline-primary', 'outline-secondary', 'outline-success', 'outline-danger', 'outline-warning', 'outline-info', 'outline-dark', 'outline-light'`\n   */\n  variant: PropTypes.string,\n\n  /**\n   * Specifies a large or small button.\n   *\n   * @type ('sm'|'lg')\n   */\n  size: PropTypes.string,\n\n  /** Spans the full width of the Button parent */\n  block: PropTypes.bool,\n\n  /** Manually set the visual state of the button to `:active` */\n  active: PropTypes.bool,\n\n  /**\n   * Disables the Button, preventing mouse events,\n   * even if the underlying component is an `<a>` element\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Defines HTML button type attribute.\n   *\n   * @default 'button'\n   */\n  type: PropTypes.oneOf([\"button\", \"reset\", \"submit\", null]),\n\n  as: PropTypes.elementType,\n}\n\nconst defaultProps = {\n  variant: \"primary\",\n  active: false,\n  disabled: false,\n  type: \"button\",\n}\n\nconst CodeBlock = React.forwardRef(({ className, as, ...props }, ref) => {\n  const classes = classNames(className, `btn`)\n\n  const Component = as || \"div\"\n  return <Component {...props} className={classes} />\n})\n\nCodeBlock.displayName = \"CodeBlock\"\nCodeBlock.propTypes = propTypes\nCodeBlock.defaultProps = defaultProps\n\nexport default CodeBlock\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}